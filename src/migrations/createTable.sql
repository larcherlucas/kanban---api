-- Modèle physique de données (MPD)

BEGIN; -- Débute une transaction = si l'une des commandes échoue, elles échouent toutes !

-- Pour pouvoir relancer le script, on supprime les tables d'abord
DROP TABLE IF EXISTS "list", "card", "tag", "card_has_tag";

CREATE TABLE "list" (
  "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "title" TEXT NOT NULL,
  "position" INTEGER DEFAULT 1,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "card" (
  "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "content" TEXT NOT NULL,
  "position" INTEGER NOT NULL DEFAULT 1,
  "color" VARCHAR(7),

  "list_id" INTEGER NOT NULL REFERENCES "list"("id") ON DELETE CASCADE,
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

-- REFERENCES "list"("id") ===> si une carte pointe vers une list qui n'existe pas, ça plante !
-- ON DELETE CASCADE       ===> si on supprime la liste, les cartes de la liste sont supprimées automatiquement
--                         ===> autre solution, ne PAS mettre ce ON DELETE CASCADE et à ce moment là, il faudra obligatoirement vider les cartes avant de supprimer les listes !                          

CREATE TABLE "tag" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT NOT NULL UNIQUE,
  "color" VARCHAR(7),
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);


CREATE TABLE "card_has_tag" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

  "card_id" INTEGER NOT NULL REFERENCES "card"("id") ON DELETE CASCADE,
  "tag_id" INTEGER NOT NULL REFERENCES "tag"("id") ON DELETE CASCADE,

  UNIQUE ("card_id", "tag_id"),

  "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMPTZ
);

-- On aurait pu ne pas mettre d'ID à cette table card_has_tag et à la place, mettre une clé primaire COMPOSITE : 
-- = une clé primaire composée de 2 champs

-- UNIQUE ("card_id", "tag_id"), ==> on peut pas avoir deux fois le même tag sur la même cardes

-- Alternativement, on peut expliciter la contrainte de clé étrangère au niveau de la table :
-- "card_id" INTEGER NOT NULL ON DELETE CASCADE,
-- FOREIGN KEY ("card_id") REFERENCES "card"("id"),


COMMIT; -- Fin de la transaction